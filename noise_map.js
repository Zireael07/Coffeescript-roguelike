// Generated by CoffeeScript 2.5.1
var map_create;

import {
  Simplex
} from './3rd-party/rotjs/simplex.js';

import {
  TileTypes
} from './enums.js';

import {
  Level
} from './level.js';

map_create = function(max_x = 20, max_y = 20) {
  var end_x, end_y, i, j, k, l, level, m, n, new_map, noise, o, ref, ref1, ref2, ref3, x, y;
  //new_map = [[ get_index(TileTypes.FLOOR) for _ in range(0, constants.MAP_HEIGHT)] for _ in range(0, constants.MAP_WIDTH)]
  end_x = max_x - 1;
  end_y = max_y - 1;
  new_map = [];
// those are inclusive
  for (x = k = 0, ref = end_x; (0 <= ref ? k <= ref : k >= ref); x = 0 <= ref ? ++k : --k) {
    new_map.push([]);
    for (y = l = 0, ref1 = end_y; (0 <= ref1 ? l <= ref1 : l >= ref1); y = 0 <= ref1 ? ++l : --l) {
      new_map[x].push([TileTypes.FLOOR]);
    }
  }
  level = new Level(new_map);
  // basic noise
  noise = new Simplex();
// create the map
  for (x = m = 0, ref2 = end_x; (0 <= ref2 ? m <= ref2 : m >= ref2); x = 0 <= ref2 ? ++m : --m) {
    for (y = o = 0, ref3 = end_y; (0 <= ref3 ? o <= ref3 : o >= ref3); y = 0 <= ref3 ? ++o : --o) {
      i = x;
      j = y;
      n = noise.get(i / end_x, j / end_y) * 255; // because default values are very small
      //console.log "noise: " + n 
      if (n >= 0) {
        new_map[x][y] = TileTypes.TREE;
      } else {
        new_map[x][y] = TileTypes.FLOOR;
      }
    }
  }
  level.mapa = new_map;
  return level; // for chaining
};

export {
  map_create
};
