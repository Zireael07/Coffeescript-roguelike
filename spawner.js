// Generated by CoffeeScript 2.5.1
var spawn_item, spawn_named_item, spawn_npc, spawn_player;

import {
  Position,
  Player,
  Faction,
  Skills,
  Attributes,
  TurnComponent,
  Name,
  Stats,
  Velocity,
  NPC,
  TileBlocker,
  Item,
  Equipped,
  Wearable
} from './components.js';

import {
  generate_random_item,
  generate_random_NPC
} from './random_utils.js';

import {
  generate_npc,
  generate_item
} from './generators.js';

import {
  State
} from './js_game_vars.js';

import {
  random_free_tile
} from './map_common.js';

spawn_player = function(world) {
  var equip_list, i, id, j, loc, player, ref, x, y;
  player = world.create_entity();
  loc = [2, 2];
  // destructuring assignment
  [x, y] = loc;
  world.add_component(player, new Position(x, y));
  world.add_component(player, new Player());
  world.add_component(player, new Name("Player"));
  world.add_component(player, new TurnComponent());
  world.add_component(player, new Stats(20, 4));
  world.add_component(player, new Faction("player"));
  world.add_component(player, new Skills());
  world.add_component(player, new Attributes(15, 14, 13, 12, 8, 10));
  equip_list = ["T-shirt", "Jeans", "Boots"];
  for (i = j = 0, ref = equip_list.length - 1; (0 <= ref ? j <= ref : j >= ref); i = 0 <= ref ? ++j : --j) {
    id = equip_list[i];
    spawn_named_item(world, loc, id.toLowerCase(), player); // avoid implicit return
  }
};

spawn_npc = function(world) {
  var add, choice, equip_list, i, id, j, k, loc, npc, ref, ref1, x, y;
  // Choose a random free location in the map
  //x = State.rng.range(1, 18);
  //y = State.rng.range(1, 18);
  loc = random_free_tile(State.map);
  [x, y] = loc;
  choice = generate_random_NPC();
  npc = world.create_entity([new Position(x, y), new Velocity(), new NPC(), new TileBlocker(), new Skills(), new Attributes()]);
  if (choice === null || choice === void 0) {
    return;
  }
  //fill in the rest
  [add, equip_list] = generate_npc(choice.toLowerCase());
//add them
  for (i = j = 0, ref = add.length - 1; (0 <= ref ? j <= ref : j >= ref); i = 0 <= ref ? ++j : --j) {
    world.add_component(npc, add[i]);
  }
  for (i = k = 0, ref1 = equip_list.length - 1; (0 <= ref1 ? k <= ref1 : k >= ref1); i = 0 <= ref1 ? ++k : --k) {
    id = equip_list[i];
    spawn_named_item(world, [x, y], id, npc); // avoid implicit return
  }
};

spawn_item = function(world) {
  var add, choice, i, it, j, loc, ref, x, y;
  // Choose a random location in the map
  //x = State.rng.range(1, 18)
  //y = State.rng.range(1, 18)
  loc = random_free_tile(State.map);
  [x, y] = loc;
  choice = generate_random_item();
  // things that all items share
  it = world.create_entity([new Position(x, y), new Item()]);
  if (choice === null || choice === void 0) {
    return;
  }
  //fill in the rest
  add = generate_item(choice.toLowerCase());
//add them
  for (i = j = 0, ref = add.length - 1; (0 <= ref ? j <= ref : j >= ref); i = 0 <= ref ? ++j : --j) {
    world.add_component(it, add[i]);
  }
};

spawn_named_item = function(world, pos, id, ent_equipped = null) {
  var add, i, it, j, ref, x, y;
  // destructuring assignment
  [x, y] = pos;
  // things that all items share
  it = world.create_entity([new Position(x, y), new Item()]);
  //fill in the rest
  add = generate_item(id.toLowerCase());
//add them
  for (i = j = 0, ref = add.length - 1; (0 <= ref ? j <= ref : j >= ref); i = 0 <= ref ? ++j : --j) {
    world.add_component(it, add[i]);
  }
  if (ent_equipped !== null) {
    world.add_component(it, new Equipped(world.component_for_entity(it, Wearable).slot, ent_equipped));
    return console.log("Spawned an equipped item... " + world.component_for_entity(it, Name).name);
  }
};

export {
  spawn_player,
  spawn_item,
  spawn_npc
};
