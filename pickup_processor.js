// Generated by CoffeeScript 2.5.0
var PickupProcessor;

import {
  Position,
  InBackpack,
  Item,
  WantToPickup,
  Name
} from './components.js';

import {
  State
} from './js_game_vars.js';

PickupProcessor = class PickupProcessor {
  
    constructor() {
      this.world = undefined
    }
    // constructor ->
    //     @world = undefined
    //     @action = null
    ;

  process() {
    var comps, ent, i, item, item_comps, item_ent, item_name, item_pos, j, len, len1, pick, pos, ref, ref1;
    ref = this.world.get_components(WantToPickup, Position);
    for (i = 0, len = ref.length; i < len; i++) {
      [ent, comps] = ref[i];
      [pick, pos] = comps;
      ref1 = this.world.get_components(Item, Position);
      for (j = 0, len1 = ref1.length; j < len1; j++) {
        [item_ent, item_comps] = ref1[j];
        [item, item_pos] = item_comps;
        if (pos.x === item_pos.x && pos.y === item_pos.y) {
          if (!this.world.component_for_entity(item_ent, InBackpack)) {
            this.world.add_component(item_ent, new InBackpack());
            item_name = this.world.component_for_entity(item_ent, Name);
            State.messages.push(["Player picked up " + item_name.name + "!", [255, 255, 255]]);
          }
        }
      }
      this.world.remove_component(ent, WantToPickup); // avoid coffeescript's implicit return
    }
  }

};

export {
  PickupProcessor
};
