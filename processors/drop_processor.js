// Generated by CoffeeScript 2.5.1
var DropProcessor;

import {
  WantToDrop,
  Position,
  InBackpack,
  Name
} from '../components.js';

import {
  State
} from '../js_game_vars.js';

DropProcessor = class DropProcessor {
  
    constructor() {
      this.world = undefined
    }
    // constructor ->
    //     @world = undefined
    //     @action = null
    ;

  process() {
    var comps, ent, i, item_id, item_name, len, name, pos, pos_item, ref, want;
    ref = this.world.get_components(Position, WantToDrop);
    //console.log("Drop processor")
    for (i = 0, len = ref.length; i < len; i++) {
      [ent, comps] = ref[i];
      [pos, want] = comps;
      item_id = want.item_id;
      this.world.remove_component(item_id, InBackpack);
      // message
      name = this.world.component_for_entity(ent, Name);
      item_name = this.world.component_for_entity(item_id, Name);
      // if equipped, unequip
      if (this.world.component_for_entity(item_id, Equipped)) {
        this.world.remove_component(item_id, Equipped);
        State.messages.push([name.name + " unequips " + item_name.name, [255, 255, 255]]);
      }
      pos_item = this.world.component_for_entity(item_id, Position);
      pos_item.x = pos.x;
      pos_item.y = pos.y;
      State.messages.push([name.name + " drops " + item_name.name + "!", [255, 255, 255]]);
      // cleanup
      this.world.remove_component(ent, WantToDrop); // avoid coffeescript's implicit return
    }
  }

};

export {
  DropProcessor
};
