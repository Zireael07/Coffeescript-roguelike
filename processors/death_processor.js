// Generated by CoffeeScript 2.5.0
var DeathProcessor;

import {
  Name,
  Dead,
  Player,
  Position,
  Equipped
} from '../components.js';

import {
  State
} from '../js_game_vars.js';

DeathProcessor = class DeathProcessor {
  
    constructor() {
      this.world = undefined
    }
    // constructor ->
    //     @world = undefined
    //     @action = null
    ;

  process() {
    var comps, dead, ent, equip, i, item_ent, j, len, len1, name, pos, pos_item, ref, ref1;
    ref = this.world.get_components(Name, Dead, Position);
    //console.log ("Death processor...")
    for (i = 0, len = ref.length; i < len; i++) {
      [ent, comps] = ref[i];
      //console.log "Dead... " + ent
      [name, dead, pos] = comps;
      if (this.world.component_for_entity(ent, Player)) {
        State.messages.push(["You are DEAD!", [255, 0, 0]]);
        // skip
        continue;
      }
      ref1 = this.world.get_component(Equipped);
      
      // drop their stuff
      for (j = 0, len1 = ref1.length; j < len1; j++) {
        [item_ent, equip] = ref1[j];
        //console.log(item_ent)
        if (equip.owner === ent) {
          //console.log(item_ent)
          // drop
          this.world.remove_component(item_ent, Equipped);
          pos_item = this.world.component_for_entity(item_ent, Position);
          pos_item.x = pos.x;
          pos_item.y = pos.y;
        }
      }
      State.messages.push([name.name + " is dead!", [127, 127, 127]]);
      // delete from ECS
      this.world.delete_entity(ent); // avoid coffeescript's implicit return
    }
  }

};

export {
  DeathProcessor
};
